swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Akademia 2018 - heroku communication"
  contact:
    email: "s.kubalski@polsource.com"
host: "a18-heroku-example.herokuapp.com"
basePath: "/api/v1"
paths:
  /asset/qr/{assetId}:
    get:
      tags:
      - "QR code"
      summary: "Get QR code url"
      produces:
      - "application/json"
      parameters:
      - name: "assetId"
        in: "path"
        description: "Id of the asset"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            required:
                - "url"
            properties:
              url:
                type: "string"
        400:
          description: "Invalid ID supplied"
        404:
          description: "QR not found"
        500:
          description: "Unexpected error"
    post:
      tags:
      - "QR code"
      summary: "Generate QR code"
      produces:
      - "application/json"
      parameters:
      - name: "assetId"
        in: "path"
        description: "Id of the asset"
        required: true
        type: "string"
      responses:
        201:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "QR not found"
        500:
          description: "Unexpected error"
    put:
      tags:
      - "QR code"
      summary: "Update QR code"
      produces:
      - "application/json"
      parameters:
      - name: "assetId"
        in: "path"
        description: "Id of the asset"
        required: true
        type: "string"
      responses:
        201:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "QR not found"
        500:
          description: "Unexpected error"
  /asset/csv:
    post:
      tags:
      - "Asset csv"
      summary: "Generate new csv for asset search"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            required:
                - "url"
                - "token"
            properties:
              url:
                type: "string"
              token:
                type: "string"
        400:
          description: "Invalid filters"
        500:
          description: "Unexpected error"
  /asset/csv/{token}:
    get:
      tags:
      - "Asset csv"
      summary: "Get a csv"
      produces:
      - "binary"
      parameters:
      - name: "token"
        in: "path"
        description: "Token generated in /asset/csv"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid token"
        500:
          description: "Unexpected error"
